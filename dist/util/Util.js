// Copyright Â© 2019 Brandon Li. All rights reserved.

// Minified distribution version - sim-core 0.0.0-dev.22 - MIT.
define(require=>{"use strict";const t=require("SIM_CORE/util/assert"),e={EPSILON:1e-5,PHI:(1+Math.sqrt(5))/2,MICRO:1e-6,MILLI:.001,BASE:1,CENTI:.01,KILO:1e3,GIGA:1e9,toRadians:t=>t*(Math.PI/180),toDegrees:t=>t*(180/Math.PI),convertTo:(t,e)=>t/e,convertFrom:(t,e)=>t*e,clamp:(t,e,r)=>t<e?e:t>r?r:t,gcd(t,e){return Math.abs(0===e?t:this.gcd(e,t%e))},lcm:(t,r)=>e.roundSymmetric(Math.abs(t*r)/e.gcd(t,r)),solveLinearRoots:(t,e)=>0===t?0===e?null:[]:[-e/t],solveQuadraticRoots(t,r,a){if(0===t)return e.solveLinearRoots(r,a);const o=r*r-4*t*a;return o<0?[]:0===o?[-r/(2*t)]:[(-r-Math.sqrt(o))/(2*t),(-r+Math.sqrt(o))/(2*t)]},cubeRoot:t=>t>=0?Math.pow(t,1/3):-Math.pow(-t,1/3),roundSymmetric:t=>e.sign(t)*Math.round(Math.abs(t)),toFixed(t,r){const a=Math.pow(10,r),o=e.roundSymmetric(t*a)/a;return parseFloat(o.toFixed(r))},isInteger:e=>(t("number"==typeof e,"isInteger requires its argument to be a number: "+e),e%1==0),equalsEpsilon:(t,r,a=e.EPSILON)=>Math.abs(t-r)<=a,sign:t=>(t>0)-(t<0)||+t,cosh:t=>(Math.exp(t)+Math.exp(-t))/2,sinh:t=>(Math.exp(t)-Math.exp(-t))/2,log10:t=>Math.log(t)/Math.LN10,numberOfDecimalPlaces(t){let e=0,r=1;for(;t*r%1!=0;)e++,r*=10;return e},isArray:t=>"[object Array]"===Object.prototype.toString.call(t),arrayRemove(r,a){t(e.isArray(r),`invalid array: ${r}`);const o=r.indexOf(a);t(o>=0,`item, ${a} not found in Array`),r.splice(o,1)},toCamelCase:e=>(t("string"==typeof e,`invalid str: ${e}`),e.toLowerCase().replace(/-(.)/g,(t,e)=>e.toUpperCase())),toTitleCase:e=>(t("string"==typeof e,`invalid str: ${e}`),e.split("-").map(t=>t.length>0?t[0].toUpperCase()+t.substr(1).toLowerCase():"").join(" "))};return e});