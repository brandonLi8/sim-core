// Copyright Â© 2019 Brandon Li. All rights reserved.

// Minified distribution version - sim-core 0.0.0-dev.6 - MIT.
define(require=>{"use strict";const e=require("SIM_CORE/util/assert").always,t=function(){const e={};return window.location.search.substring(1).split("&").forEach(t=>{if(""!==t){const a=t.split("=",2),l=a[0],i=2===a.length?a[1]:null;e[l]=i?decodeURIComponent(i):i}}),e}(),a=["flag","boolean","number","string"];return class{static retrieve(t){!function(t){e(Object.getPrototypeOf(t)===Object.prototype,`invalid schema: ${t}`),Object.keys(t).forEach(l=>{const i=t[l];e(Object.getPrototypeOf(i)===Object.prototype,`invalid object for ?${l}: ${i}`),e(a.includes(i.type),`invalid type for ?${l}: ${i.type}`),e("flag"===i.type||typeof i.defaultValue===i.type,`invalid defaultValue for ?${l}: ${i.defaultValue}`),e(!i.isValidValue||"function"==typeof i.isValidValue,`invalid isValidValue for ?${l}: ${i.isValidValue}`),e(!("flag"!==i.type&&i.isValidValue)||i.isValidValue(i.defaultValue),`invalid defaultValue for ?${l} doesn't pass isValidValue(): ${i.defaultValue}`)})}(t);const l={};return Object.keys(t).forEach(a=>{const i=t[a],n=i.type,o="flag"!==n&&i.defaultValue,s=this.get(a),r=i.isValidValue,u=this.contains(a)?function(t,a,l){if("number"===a){const a=Number(t);return e(!isNaN(a),`invalid number value for ?${l}: ${t}`),a}return"boolean"===a?(e("true"===t||"false"===t,`invalid boolean value for ?${l}: ${t}`),"true"===t):"flag"===a?(e(null===t,`value for ?${l} shouldn't exist: ${t} for 'flag' parameter types`),!0):t}(s,n,a):o;e(!r||r(u),`value ${u} for ?${a} didn't pass isValidValue()`),l[a]=u}),l}static contains(a){return e("string"==typeof a,`invalid name ${a}`),Object.prototype.hasOwnProperty.call(t,a)}static get(a){return e("string"==typeof a,`invalid name ${a}`),t[a]}}});