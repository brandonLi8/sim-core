// Copyright Â© 2019 Brandon Li. All rights reserved.

// Minified distribution version - sim-core 0.0.0-dev.22 - MIT.
define(require=>{"use strict";const t=require("SIM_CORE/util/assert"),e=require("SIM_CORE/scenery/Node");return class extends e{constructor(e){t(!e||Object.getPrototypeOf(e)===Object.prototype,`Extra prototype on Options: ${e}`),super(e={type:"svg",namespace:"http://www.w3.org/2000/svg",invertYAxis:!0,fill:null,stroke:null,strokeWidth:null,width:1,height:1,shapeRendering:null,overflow:"visible",...e}),e.shapeRendering&&this.addAttributes({"shape-rendering":e.shapeRendering}),this._strokeWidth=e.strokeWidth,this.addAttributes({overflow:e.overflow,fill:e.fill,stroke:e.stroke,"stroke-width":e.strokeWidth})}get strokeWidth(){return this._strokeWidth}set strokeWidth(t){this._strokeWidth=t,this.layout(this.scale)}get x(){return this.left}set x(t){this.left=t,this.layout(this.scale)}get y(){return this.top}set y(t){this.top=t,this.layout(this.scale)}layout(t){super.layout(t),this.addAttributes({height:this.style.width,width:this.style.height,x:`${t*this.x}px`,y:`${t*this.y}px`}),this.strokeWidth&&this.addAttributes({"stroke-width":Math.max(this._strokeWidth*t,1)})}}});