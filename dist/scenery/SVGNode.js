// Copyright Â© 2019 Brandon Li. All rights reserved.

// Minified distribution version - sim-core 0.0.0-dev.18 - MIT.
define(require=>{"use strict";const t=require("SIM_CORE/util/assert"),e=require("SIM_CORE/scenery/Node");return class extends e{constructor(e){t(!e||Object.getPrototypeOf(e)===Object.prototype,`Extra prototype on Options: ${e}`),super(e={type:"svg",namespace:"http://www.w3.org/2000/svg",invertYAxis:!0,fill:null,stroke:null,strokeWidth:null,shapeRendering:null,overflow:"visible",...e}),e.shapeRendering&&this.addAttributes({"shape-rendering":e.shapeRendering}),this.strokeWidth=e.strokeWidth,this.addAttributes({overflow:e.overflow,fill:e.fill,stroke:e.stroke,"stroke-width":e.strokeWidth})}layout(t){super.layout(t),this.addAttributes({height:`${t*this._height}px`,width:`${t*this._width}px`}),this.style.top=`${t*this._top}px`,this.style.left=`${t*this._left}px`,this.center&&(this.style.top=`${t*(this._center.y-this.height/2)}px`,this.style.left=`${t*(this._center.x-this.width/2)}px`),this.strokeWidth&&this.addAttributes({"stroke-width":this.strokeWidth*t})}}});